load("@rules_java//java:defs.bzl", "java_library")
load("@rules_java//java:java_single_jar.bzl", "java_single_jar")

# Output of interest is main_deploy.jar

# add_exports and add_opens are embedded in the deploy jar
add_exports = [
    "jdk.compiler/com.sun.tools.javac.api",
    "jdk.compiler/com.sun.tools.javac.code",
    "jdk.compiler/com.sun.tools.javac.comp",
    "jdk.compiler/com.sun.tools.javac.main",
    "jdk.compiler/com.sun.tools.javac.tree",
    "jdk.compiler/com.sun.tools.javac.model",
    "jdk.compiler/com.sun.tools.javac.util",
]
add_opens = [
    "jdk.compiler/com.sun.tools.javac.api",
]

java_library(
    name = "lib",
    srcs = glob(["java/**/*.java"]),
    deps = [
        "@maven//:com_google_code_gson_gson",
        "@maven//:jakarta_annotation_jakarta_annotation_api",
    ],
    add_exports = add_exports,
    add_opens = add_opens,
    visibility = ["//server/src/test:__pkg__"],
)

java_single_jar(
    name = "language_server",
    deps = [":lib"],
    deploy_manifest_lines = [
        "Main-Class: org.javacs.Main",
        # These are not carried forward :(
        "Add-Opens: jdk.compiler/com.sun.tools.javac.api",
    ] + ["Add-Exports: " + package for package in add_exports]
    + ["Add-Opens: " + package for package in add_opens],
    visibility =  ["//extension/vsix:__pkg__"],
)

# TODO This binary can be trimmed down a lot, most of the source is for the language server
java_single_jar(
    name = "debug_server",
    deps = [":lib"],
    deploy_manifest_lines = [
        "Main-Class: org.javacs.debug.JavaDebugServer",
        # These are not carried forward :(
        "Add-Opens: jdk.compiler/com.sun.tools.javac.api",
    ] + ["Add-Exports: " + package for package in add_exports]
    + ["Add-Opens: " + package for package in add_opens],
    visibility =  ["//extension/vsix:__pkg__"],
)
